        org 0
        b petlja
        org 0x18                        ; dvije adrese za prekid, ova je kao za mini prekide
        b provjera ;jesmo li dosli do 5
        org 0x1c                        ; a ova je za krajnji prekid
        b kraj

petlja  
        msr cpsr, #0b11010010 ; irq
        mov sp, #0x10000 ; inicijalizacija r13_irq -> inicijaliziramo gdje je stog za taj prekid
        msr cpsr, #0b11010001 ; fiq
        mov sp, #0xfc00 ; inicijalizacija r13_fiq
        msr cpsr, #0b11010011 ; svc
        mov sp, #0xf800 ; inijalizacija rq3_svc
                                                        ; sve isto ko u prvom zadatku
        ldr r0, rtc
        mov r1, #0
        str r1, [r0, #0x0c] ; brisanje brojila
        str r1, [r0, #0x08]
        ldr r1, konst
        str r1, [r0, #0x04] ; konstanta brojenja u MR

        ldr r2, dmac_adr ; incijalizacija dmac
        mov r1, #0x500 ; izvorisna adresa
        str r1, [r2, #0x10] ; mjesto za spremanje izvorisne adrese, 0x10
        mov r1, #0x700 ; odredisna adresa
        str r1, [r2, #0x14] ; mjesto za spremanje odredisne adrese, 0x14
        mov r1, #0x000a ; transfer size, prva 0 je jer je blok velicine 1 = 2^0, a druga tri broja pokazuju koliko podataka ima, 00a je 10 podataka
        str r1, [r2, #0x18]
        mov r1, #0b10101100     ; konfiguracija, 10101100 - 1-omogucen prekid, 0-ne koriste se prikljucci ili tak nekaj
                                ; 10-velicina podatka je rijec, 11-povecavamo adrese i odredisnu i izvorisnu, 00-nemam pojma iskreno 
        str r1, [r2, #0x1c]
        mov r1, #1
        str r1, [r2, #0]        ; 0x00 omogucava kanal, "pali" ga

        mrs r0, cpsr
        bic r0, r0, #0x0c0 ; omogucavanje irq i fiq 
                ; ni to ne kuzim pa bi bilo super kad bi objasnio
        msr cpsr, r0

cekaj   
        ldr r2, brojac
        cmp r2, #5
        bne cekaj
                        ; gledamo kakav nam je brojac, kad dode do 5 kraj programa
        swi 0x123456

provjera  
        stmfd sp!, {r0, r1}     ; koristimo irq pa nam opet treba stog

        ldr r0, zadnji
        mov r1, #0x700
        str r0, [r1, #0x28] ; spremanje zadnjeg broja

        ldr r1, dmac_adr                ; ne znam kaj se tu dogada
        str r1, [r1, #0x4] ; primanje prekida

        ldr r0, brojac
        add r0, r0, #1
        str r0, brojac
        cmp r0, #5
        beq dosta

        ldr r0, rtc
        mov r1, #0
        str r1, [r0, #0x0c]
        str r1, [r0, #0x08]

        mov r1, #1
        str r1, [r0, #0x10] ; prekid

dosta   
        ldmfd sp!, {r0, r1}
        subs pc, lr, #4

kraj    
        ldr r4, rtc
        mov r5, #0
        str r5, [r4, #0x0c]
        str r5, [r4, #0x08]
        str r5, [r4, #0x10]

        ldr r5, dmac_adr
                        ; ak imas vremena ovaj lab probaj malo bolje objasnit, dosta mi je mutan
        mov r4, #0x500
        str r4, [r5, #0x10]
        mov r4, #0x700
        str r4, [r5, #0x14]
        mov r4, #0x000a
        str r4, [r5, #0x18]
        mov r4, #0b10101100
        str r4, [r5, #0x1c]
        mov r4, #1
        str r4, [r5, #0]

        subs pc, lr, #4 

brojac dw 0
dmac_adr dw 0x00ff0000
rtc dw 0xffff0e00
zadnji dw 0x80808080
konst dw 3
